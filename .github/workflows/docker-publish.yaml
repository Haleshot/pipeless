name: Publish Docker image

on:
  #push:
  #  tags:
  #  TODO: we should split the cli and the core containers, if not, the release lifecycle is a mess
  #        if not, we have to release using the core version but after the cli is published.
  #    - 'core-v*'
  workflow_dispatch:
    branches:
      - main
    inputs:
      tag_override:
        description: "Override the image tag. Useful to release revisions of the container when the Pipeless code has not changed"
        type: string
jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: miguelaeh/pipeless

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:package"
          file: ./Dockerfile
          push: true
          tags: ${{ inputs.tag_override != '' && inputs.tag_override || steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  push_cuda_to_registry:
    name: Push CUDA Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: miguelaeh/pipeless
          flavor: |
            suffix=cuda,onlatest=true

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:package"
          file: ./Dockerfile-cuda
          push: true
          tags: ${{ inputs.tag_override != '' && inputs.tag_override || steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
